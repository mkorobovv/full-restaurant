// Package controller_gen provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package controller_gen

import (
	"time"

	openapi_types "github.com/oapi-codegen/runtime/types"
)

// CustomerOrderHistory defines model for CustomerOrderHistory.
type CustomerOrderHistory struct {
	// CustomerId Идентификатор клиента
	CustomerId *int    `json:"customer_id,omitempty"`
	FirstName  *string `json:"first_name,omitempty"`
	LastName   *string `json:"last_name,omitempty"`
	Orders     *[]struct {
		// CreatedAt Дата и время создания заказа
		CreatedAt *openapi_types.Date `json:"created_at,omitempty"`
		Dishes    *[]struct {
			// DishId Идентификатор блюда
			DishId *int `json:"dish_id,omitempty"`

			// Name Название блюда
			Name *string `json:"name,omitempty"`

			// Price Цена блюда на момент заказа
			Price *float64 `json:"price,omitempty"`

			// Quantity Количество блюда в заказе
			Quantity *int `json:"quantity,omitempty"`
		} `json:"dishes,omitempty"`

		// OrderId Идентификатор заказа
		OrderId *int `json:"order_id,omitempty"`

		// TotalPrice Общая стоимость заказа
		TotalPrice *float64 `json:"total_price,omitempty"`
	} `json:"orders,omitempty"`
}

// Dish defines model for Dish.
type Dish struct {
	// DishId Идентификатор блюда
	DishId *int `json:"dish_id,omitempty"`

	// Name Название блюда
	Name *string `json:"name,omitempty"`

	// Price Цена блюда
	Price *float64 `json:"price,omitempty"`
}

// DishWithIngredients defines model for DishWithIngredients.
type DishWithIngredients struct {
	DishId      *int      `json:"dish_id,omitempty"`
	Ingredients *[]string `json:"ingredients,omitempty"`
	Name        *string   `json:"name,omitempty"`
	Price       *float64  `json:"price,omitempty"`
}

// EmployeeOrderCount defines model for EmployeeOrderCount.
type EmployeeOrderCount struct {
	EmployeeId  *int    `json:"employee_id,omitempty"`
	FirstName   *string `json:"first_name,omitempty"`
	LastName    *string `json:"last_name,omitempty"`
	OrdersCount *int    `json:"orders_count,omitempty"`
	PhoneNumber *string `json:"phone_number,omitempty"`
}

// Error defines model for Error.
type Error struct {
	// Code Код ошибки
	Code int `json:"code"`

	// Message Сообщение об ошибке
	Message string `json:"message"`
}

// Product defines model for Product.
type Product struct {
	DateOfExpiry     *openapi_types.Date `json:"date_of_expiry,omitempty"`
	DateOfProduction *openapi_types.Date `json:"date_of_production,omitempty"`
	Name             *string             `json:"name,omitempty"`
	ProductId        *int                `json:"product_id,omitempty"`
	Status           *string             `json:"status,omitempty"`
}

// SupplierWithSupplies defines model for SupplierWithSupplies.
type SupplierWithSupplies struct {
	CompanyName *string `json:"company_name,omitempty"`
	SupplierId  *int    `json:"supplier_id,omitempty"`
	Supplies    *[]struct {
		DateFrom *time.Time `json:"date_from,omitempty"`
		Price    *float64   `json:"price,omitempty"`
		Quantity *int       `json:"quantity,omitempty"`
		SupplyId *int       `json:"supply_id,omitempty"`
	} `json:"supplies,omitempty"`
}
